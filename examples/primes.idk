func sqrt(val:float) -> float
	// Initialize the result to a guess
	result := val / 2.0

	// Continue iterating until the result is accurate to within 0.00001
    i := 0
	for i < 10
		result = result - (result * result - val) / (2.0 * result)
        i = i + 1
	end

	return result
end

// This function returns true if the given number is prime, and false otherwise
func isPrime(n:int) -> bool
    // Return false if n is less than 2
    if n < 2
        return false
    end

    // Check if n is divisible by any number between 2 and the square root of n
    n_sqrt := int(sqrt(float(n)))
    i := 2
    for i <= n_sqrt
        // Return false if n is divisible by i
        if n % i == 0
            return false
        end

        i = i + 1
    end

    // Return true if n is not divisible by any number between 2 and the square root of n
    return true
end

// This function prints all the prime numbers in the given range
func printPrimesInRange(from:int, to:int)
    // Loop through the range of numbers
    n := from
    for n < to
        // Check if the current number is prime
        if isPrime(n)
            // Print the number if it is prime
            print(n)
        end

        n = n + 1
    end
end

// Print all the prime numbers between 1 and 100
// printPrimesInRange(1, 100)
printPrimesInRange(1, 10)
